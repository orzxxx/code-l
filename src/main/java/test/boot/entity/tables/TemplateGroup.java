/*
 * This file is generated by jOOQ.
*/
package test.boot.entity.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import test.boot.entity.Keys;
import test.boot.entity.Public;
import test.boot.entity.tables.records.TemplateGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TemplateGroup extends TableImpl<TemplateGroupRecord> {

    private static final long serialVersionUID = 2126909549;

    /**
     * The reference instance of <code>PUBLIC.T_TEMPLATE_GROUP</code>
     */
    public static final TemplateGroup T_TEMPLATE_GROUP = new TemplateGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TemplateGroupRecord> getRecordType() {
        return TemplateGroupRecord.class;
    }

    /**
     * The column <code>PUBLIC.T_TEMPLATE_GROUP.ID</code>.
     */
    public final TableField<TemplateGroupRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_3EB0E551_10CF_4DBF_BB70_11DB80C681F9)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.T_TEMPLATE_GROUP.NAME</code>.
     */
    public final TableField<TemplateGroupRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * Create a <code>PUBLIC.T_TEMPLATE_GROUP</code> table reference
     */
    public TemplateGroup() {
        this("T_TEMPLATE_GROUP", null);
    }

    /**
     * Create an aliased <code>PUBLIC.T_TEMPLATE_GROUP</code> table reference
     */
    public TemplateGroup(String alias) {
        this(alias, T_TEMPLATE_GROUP);
    }

    private TemplateGroup(String alias, Table<TemplateGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private TemplateGroup(String alias, Table<TemplateGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TemplateGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_TEMPLATE_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TemplateGroupRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_C;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TemplateGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<TemplateGroupRecord>>asList(Keys.CONSTRAINT_C);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TemplateGroup as(String alias) {
        return new TemplateGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TemplateGroup rename(String name) {
        return new TemplateGroup(name, null);
    }
}
