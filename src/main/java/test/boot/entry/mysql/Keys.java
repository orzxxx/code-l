/*
 * This file is generated by jOOQ.
*/
package test.boot.entry.mysql;


import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import test.boot.entry.mysql.tables.TAccountAsset;
import test.boot.entry.mysql.tables.TAccountMark;
import test.boot.entry.mysql.tables.TAccountMarkProdInfo;
import test.boot.entry.mysql.tables.TAccountMot;
import test.boot.entry.mysql.tables.TAccountProdInfo;
import test.boot.entry.mysql.tables.TDictLvl2;
import test.boot.entry.mysql.tables.TDictLvl2Desc;
import test.boot.entry.mysql.tables.TIndexHistperf;
import test.boot.entry.mysql.tables.TIndexSignal;
import test.boot.entry.mysql.tables.TProdAccountInfo;
import test.boot.entry.mysql.tables.TProdInfo;
import test.boot.entry.mysql.tables.TSimilarklineStock;
import test.boot.entry.mysql.tables.TStockmarketInfo;
import test.boot.entry.mysql.tables.TTopxStockinfo;
import test.boot.entry.mysql.tables.records.TAccountAssetRecord;
import test.boot.entry.mysql.tables.records.TAccountMarkProdInfoRecord;
import test.boot.entry.mysql.tables.records.TAccountMarkRecord;
import test.boot.entry.mysql.tables.records.TAccountMotRecord;
import test.boot.entry.mysql.tables.records.TAccountProdInfoRecord;
import test.boot.entry.mysql.tables.records.TDictLvl2DescRecord;
import test.boot.entry.mysql.tables.records.TDictLvl2Record;
import test.boot.entry.mysql.tables.records.TIndexHistperfRecord;
import test.boot.entry.mysql.tables.records.TIndexSignalRecord;
import test.boot.entry.mysql.tables.records.TProdAccountInfoRecord;
import test.boot.entry.mysql.tables.records.TProdInfoRecord;
import test.boot.entry.mysql.tables.records.TSimilarklineStockRecord;
import test.boot.entry.mysql.tables.records.TStockmarketInfoRecord;
import test.boot.entry.mysql.tables.records.TTopxStockinfoRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>datasync</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TAccountAssetRecord> KEY_T_ACCOUNT_ASSET_PRIMARY = UniqueKeys0.KEY_T_ACCOUNT_ASSET_PRIMARY;
    public static final UniqueKey<TAccountMarkRecord> KEY_T_ACCOUNT_MARK_PRIMARY = UniqueKeys0.KEY_T_ACCOUNT_MARK_PRIMARY;
    public static final UniqueKey<TAccountMarkProdInfoRecord> KEY_T_ACCOUNT_MARK_PROD_INFO_PRIMARY = UniqueKeys0.KEY_T_ACCOUNT_MARK_PROD_INFO_PRIMARY;
    public static final UniqueKey<TAccountMotRecord> KEY_T_ACCOUNT_MOT_PRIMARY = UniqueKeys0.KEY_T_ACCOUNT_MOT_PRIMARY;
    public static final UniqueKey<TAccountProdInfoRecord> KEY_T_ACCOUNT_PROD_INFO_PRIMARY = UniqueKeys0.KEY_T_ACCOUNT_PROD_INFO_PRIMARY;
    public static final UniqueKey<TDictLvl2Record> KEY_T_DICT_LVL2_PRIMARY = UniqueKeys0.KEY_T_DICT_LVL2_PRIMARY;
    public static final UniqueKey<TDictLvl2DescRecord> KEY_T_DICT_LVL2_DESC_PRIMARY = UniqueKeys0.KEY_T_DICT_LVL2_DESC_PRIMARY;
    public static final UniqueKey<TIndexHistperfRecord> KEY_T_INDEX_HISTPERF_PRIMARY = UniqueKeys0.KEY_T_INDEX_HISTPERF_PRIMARY;
    public static final UniqueKey<TIndexSignalRecord> KEY_T_INDEX_SIGNAL_PRIMARY = UniqueKeys0.KEY_T_INDEX_SIGNAL_PRIMARY;
    public static final UniqueKey<TProdAccountInfoRecord> KEY_T_PROD_ACCOUNT_INFO_PRIMARY = UniqueKeys0.KEY_T_PROD_ACCOUNT_INFO_PRIMARY;
    public static final UniqueKey<TProdInfoRecord> KEY_T_PROD_INFO_PRIMARY = UniqueKeys0.KEY_T_PROD_INFO_PRIMARY;
    public static final UniqueKey<TSimilarklineStockRecord> KEY_T_SIMILARKLINE_STOCK_PRIMARY = UniqueKeys0.KEY_T_SIMILARKLINE_STOCK_PRIMARY;
    public static final UniqueKey<TStockmarketInfoRecord> KEY_T_STOCKMARKET_INFO_PRIMARY = UniqueKeys0.KEY_T_STOCKMARKET_INFO_PRIMARY;
    public static final UniqueKey<TTopxStockinfoRecord> KEY_T_TOPX_STOCKINFO_IDX1_T_TOPX_STOCKINFO = UniqueKeys0.KEY_T_TOPX_STOCKINFO_IDX1_T_TOPX_STOCKINFO;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<TAccountAssetRecord> KEY_T_ACCOUNT_ASSET_PRIMARY = createUniqueKey(TAccountAsset.T_ACCOUNT_ASSET, "KEY_t_account_asset_PRIMARY", TAccountAsset.T_ACCOUNT_ASSET.FUND_ACCOUNT);
        public static final UniqueKey<TAccountMarkRecord> KEY_T_ACCOUNT_MARK_PRIMARY = createUniqueKey(TAccountMark.T_ACCOUNT_MARK, "KEY_t_account_mark_PRIMARY", TAccountMark.T_ACCOUNT_MARK.MARK_VALUE, TAccountMark.T_ACCOUNT_MARK.FUND_ACCOUNT);
        public static final UniqueKey<TAccountMarkProdInfoRecord> KEY_T_ACCOUNT_MARK_PROD_INFO_PRIMARY = createUniqueKey(TAccountMarkProdInfo.T_ACCOUNT_MARK_PROD_INFO, "KEY_t_account_mark_prod_info_PRIMARY", TAccountMarkProdInfo.T_ACCOUNT_MARK_PROD_INFO.PROD_TYPE, TAccountMarkProdInfo.T_ACCOUNT_MARK_PROD_INFO.PROD_CODE);
        public static final UniqueKey<TAccountMotRecord> KEY_T_ACCOUNT_MOT_PRIMARY = createUniqueKey(TAccountMot.T_ACCOUNT_MOT, "KEY_t_account_mot_PRIMARY", TAccountMot.T_ACCOUNT_MOT.FUND_ACCOUNT, TAccountMot.T_ACCOUNT_MOT.MOT_MARK);
        public static final UniqueKey<TAccountProdInfoRecord> KEY_T_ACCOUNT_PROD_INFO_PRIMARY = createUniqueKey(TAccountProdInfo.T_ACCOUNT_PROD_INFO, "KEY_t_account_prod_info_PRIMARY", TAccountProdInfo.T_ACCOUNT_PROD_INFO.FUND_ACCOUNT, TAccountProdInfo.T_ACCOUNT_PROD_INFO.PROD_CODE);
        public static final UniqueKey<TDictLvl2Record> KEY_T_DICT_LVL2_PRIMARY = createUniqueKey(TDictLvl2.T_DICT_LVL2, "KEY_t_dict_lvl2_PRIMARY", TDictLvl2.T_DICT_LVL2.DICT_ITEM, TDictLvl2.T_DICT_LVL2.DICT_KEY);
        public static final UniqueKey<TDictLvl2DescRecord> KEY_T_DICT_LVL2_DESC_PRIMARY = createUniqueKey(TDictLvl2Desc.T_DICT_LVL2_DESC, "KEY_t_dict_lvl2_desc_PRIMARY", TDictLvl2Desc.T_DICT_LVL2_DESC.DICT_ITEM);
        public static final UniqueKey<TIndexHistperfRecord> KEY_T_INDEX_HISTPERF_PRIMARY = createUniqueKey(TIndexHistperf.T_INDEX_HISTPERF, "KEY_t_index_histperf_PRIMARY", TIndexHistperf.T_INDEX_HISTPERF.TRADE_DATE, TIndexHistperf.T_INDEX_HISTPERF.INDEX_CODE);
        public static final UniqueKey<TIndexSignalRecord> KEY_T_INDEX_SIGNAL_PRIMARY = createUniqueKey(TIndexSignal.T_INDEX_SIGNAL, "KEY_t_index_signal_PRIMARY", TIndexSignal.T_INDEX_SIGNAL.TRADE_DATE);
        public static final UniqueKey<TProdAccountInfoRecord> KEY_T_PROD_ACCOUNT_INFO_PRIMARY = createUniqueKey(TProdAccountInfo.T_PROD_ACCOUNT_INFO, "KEY_t_prod_account_info_PRIMARY", TProdAccountInfo.T_PROD_ACCOUNT_INFO.PROD_CODE, TProdAccountInfo.T_PROD_ACCOUNT_INFO.FUND_ACCOUNT);
        public static final UniqueKey<TProdInfoRecord> KEY_T_PROD_INFO_PRIMARY = createUniqueKey(TProdInfo.T_PROD_INFO, "KEY_t_prod_info_PRIMARY", TProdInfo.T_PROD_INFO.PROD_CODE);
        public static final UniqueKey<TSimilarklineStockRecord> KEY_T_SIMILARKLINE_STOCK_PRIMARY = createUniqueKey(TSimilarklineStock.T_SIMILARKLINE_STOCK, "KEY_t_similarkline_stock_PRIMARY", TSimilarklineStock.T_SIMILARKLINE_STOCK.TRADE_DATE, TSimilarklineStock.T_SIMILARKLINE_STOCK.STOCK_CODE, TSimilarklineStock.T_SIMILARKLINE_STOCK.CLOSELY_STOCK_CODE);
        public static final UniqueKey<TStockmarketInfoRecord> KEY_T_STOCKMARKET_INFO_PRIMARY = createUniqueKey(TStockmarketInfo.T_STOCKMARKET_INFO, "KEY_t_stockmarket_info_PRIMARY", TStockmarketInfo.T_STOCKMARKET_INFO.TRADE_DATE);
        public static final UniqueKey<TTopxStockinfoRecord> KEY_T_TOPX_STOCKINFO_IDX1_T_TOPX_STOCKINFO = createUniqueKey(TTopxStockinfo.T_TOPX_STOCKINFO, "KEY_t_topx_stockinfo_idx1_t_topx_stockinfo", TTopxStockinfo.T_TOPX_STOCKINFO.TRADE_DATE, TTopxStockinfo.T_TOPX_STOCKINFO.STOCK_CODE, TTopxStockinfo.T_TOPX_STOCKINFO.TYPE, TTopxStockinfo.T_TOPX_STOCKINFO.SUB_TYPE);
    }
}
